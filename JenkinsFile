pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        stage('Debug') {
            steps {
                script {
                    teste = "${GIT_BRANCH.split("/")[1]}"
                    def branch_nem = scm.branches[0].name
                    echo 'Pulling... ' + env.GIT_BRANCH
                    def branchName = sh(script: 'git rev-parse --abbrev-ref HEAD', returnStdout: true).trim()
                    echo "Branch Name: ${branchName}"
                    echo "teste Name: ${teste}"
                    echo "teste Name: ${branch_nem}"
                    env.BRANCH_NAME = branchName // Define a vari√°vel de ambiente para usar em outras etapas
                }
            }
        }

        stage('Build com ansible') {
            steps {
                script {
                    sh 'sudo ansible-playbook -i /var/ansible/inventory /var/ansible/build.yml --private-key ~/.ssh/id_rsa'
                }
            }
        }

        stage('Deploy com ansible') {
            when {
                expression { return env.BRANCH_NAME == 'main' }
            }
            steps {
                script {
                    sh 'sudo ansible-playbook -i /var/ansible/inventory /var/ansible/deploy.yml --private-key ~/.ssh/id_rsa'
                }
            }
        }
    }

    post {
        always {
            echo 'Pipeline finished'
        }
    }
}
