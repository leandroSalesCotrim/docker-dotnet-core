pipeline {
    agent any

    environment {
        SONARQUBE_URL = 'http://sonarqube:9000' // URL do SonarQube
        SONARQUBE_TOKEN = credentials('sonarqube-token') // ID da credencial criada
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        
        stage('SonarQube Analysis') {
            steps {
                script {
                    sh '''
                    dotnet sonarscanner begin /k:"your-project-key" /d:sonar.host.url=$SONARQUBE_URL /d:sonar.login=$SONARQUBE_TOKEN
                    dotnet build YourSolution.sln
                    dotnet sonarscanner end /d:sonar.login=$SONARQUBE_TOKEN
                    '''
                }
            }
        }
        
        stage('Build com ansible') {
            steps {
                script {
                    sh 'sudo ansible-playbook -i /var/ansible/inventory /var/ansible/build.yml --private-key ~/.ssh/id_rsa'
                }
            }
        }

        stage('Deploy com ansible') {
            when {
                expression { return env.BRANCH_NAME == 'main' }
            }
            steps {
                script {
                    sh 'sudo ansible-playbook -i /var/ansible/inventory /var/ansible/deploy.yml --private-key ~/.ssh/id_rsa'
                }
            }
        }
    }

    post {
        always {
            echo 'Pipeline finished'
        }
    }
}
